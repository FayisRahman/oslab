alias userSP R0;
userSP = SP;

alias sysCallNum R1;
sysCallNum = [([PTBR + 2 * (userSP-5)/512]) * 512 + ((userSP-5)%512)];

[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 13] = SP;
SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 11] * 512 - 1;


//getpid
if(sysCallNum == 11) then

    [([PTBR + 2 * (userSP-1) / 512]) * 512 + ((userSP-1) % 512)] = [SYSTEM_STATUS_TABLE + 1];

endif;

//getppid
if(sysCallNum == 12) then

        [([PTBR + 2 * (userSP-1) / 512]) * 512 + ((userSP-1) % 512)] = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 2];
endif;

//wait
if(sysCallNum == 13) then

    [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9] = sysCallNum;
    alias pid R2;
    pid = [([PTBR + 2 * (userSP-4) / 512]) * 512 + ((userSP-4) % 512)];

    if((pid < 0 || pid > 15) || ([PROCESS_TABLE + pid * 16 + 4] == TERMINATED) || (pid == [SYSTEM_STATUS_TABLE + 1])) then

        [([PTBR + 2 * (userSP-1) / 512]) * 512 + ((userSP-1) % 512)] = -1;

    else

        [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 4] = WAIT_PROCESS;
        [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 5] = pid;

        multipush(R0,R1,R2);
        call MOD_5; //scheduler
        multipop(R0,R1,R2);

        [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9] = 0;
        [([PTBR + 2 * (userSP-1)/512]) * 512 + ((userSP-1) % 512)] = 0;

    endif;

endif;

//signal
if(sysCallNum == 14) then

    [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9] = sysCallNum;

    alias i R2;
    i = 1;
    while(i<16) do
        if([PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 4] == WAIT_PROCESS && [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 5] == [SYSTEM_STATUS_TABLE + 1]) then
            [PROCESS_TABLE + i * 16 + 4] = READY;
        endif;
        i = i + 1;
    endwhile;

    [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9] = 0; //resetting mode flag
    [([PTBR + 2 * (userSP-1)/512]) * 512 + ((userSP-1) % 512)] = 0; //setting return value as 0

endif;

SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 13];

ireturn;


