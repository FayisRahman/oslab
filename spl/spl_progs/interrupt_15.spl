//shutdown
[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9] = 21;

[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 13] = SP;

alias userSP R1;
userSP = SP;

alias returnAddr R2;
returnAddr = ([PTBR + 2 * ((userSP - 1) / 512)] * 512 + ((userSP - 1) % 512));

SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 11] * 512 - 1;

if([SYSTEM_STATUS_TABLE + 1] != 1 || [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 3] != 1) then
    [returnAddr] = -1;
    [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9] = 0;
    SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 13];
    ireturn;
endif;

//now writing back some disk blocks

//disk free list
R1 = 1;     // disk store
R2 = [SYSTEM_STATUS_TABLE + 1];
R3 = 61;
R4 = 2;
call DEVICE_MANAGER;

//inode table + user table
R1 = 1;     // disk store
R2 = [SYSTEM_STATUS_TABLE + 1];
R3 = 59;    //memory page
R4 = 3;     //disk block
call DEVICE_MANAGER;

//inode table + user table
R1 = 1;     // disk store
R2 = [SYSTEM_STATUS_TABLE + 1];
R3 = 60;    //memory page
R4 = 4;     //disk block
call DEVICE_MANAGER;

//root file
R1 = 1;     // disk store
R2 = [SYSTEM_STATUS_TABLE + 1];
R3 = 62;    //memory page
R4 = 5;     //disk block
call DEVICE_MANAGER;


halt;